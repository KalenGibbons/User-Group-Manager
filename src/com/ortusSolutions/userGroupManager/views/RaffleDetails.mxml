<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		addedToStage="addedToStageHandler()">
	
	<s:states>
		<s:State name="meetingRaffle" />
		<s:State name="quickRaffle" />
	</s:states>
	
	<fx:Metadata>
		[Event(name="deleteRaffle", type="com.ortusSolutions.userGroupManager.events.RaffleEvent")]
		[ManagedEvents("deleteRaffle")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.ortusSolutions.userGroupManager.config.Settings;
			import com.ortusSolutions.userGroupManager.events.RaffleEvent;
			import com.ortusSolutions.userGroupManager.events.RequestCompleteEvent;
			import com.ortusSolutions.userGroupManager.model.Meeting;
			import com.ortusSolutions.userGroupManager.model.Raffle;
			import com.ortusSolutions.userGroupManager.model.services.RaffleService;
			import com.ortusSolutions.userGroupManager.vo.RaffleType;
			import com.ortusSolutions.userGroupManager.vo.ResponseType;
			
			import mx.managers.PopUpManager;
			
			[Inject]
			public var raffleService:RaffleService;
			
			protected const LABEL_WIDTH:int = 			200;
			private const STATE_MEETING_RAFFLE:String = "meetingRaffle";
			private const STATE_QUICK_RAFFLE:String =	"quickRaffle";
			
			[Bindable]
			private var raffle:Raffle;
			
			[Bindable]
			private var meeting:Meeting;
			private var deleteWarning:DeleteWarning;
			
			[Init]
			public function injectionHandler():void{
				// TODO : we should just be able to pull the meeting from the raffle
				/*
				if(raffle != null){
					this.meeting = raffleService.getRaffleMeeting(raffle);
				}
				*/
			}// end injectionHandler function
			
			[MessageHandler (selector="deleteRaffle")]
			public function deletionHandler(event:RequestCompleteEvent):void{
				// if deletion was successful, go back to the previous view
				if(event.responseType == ResponseType.RESULT_OK){
					// add slight delay for effect
					setTimeout( function():void{
						navigator.popView();
					}, Settings.SAVE_DELAY);
				}
			}// end deletionHandler function
			
			protected function addedToStageHandler():void{
				this.dispatchEvent( new Event("configureView", true) );
			}// end addedToStageHandler function
			
			override public function set data(value:Object):void{
				raffle = value as Raffle;
				super.data = value;
				
				this.title = "Raffle : " + raffle.formattedDate;
				this.currentState = (raffle.raffleType == RaffleType.MEETING_RAFFLE) ? STATE_MEETING_RAFFLE : STATE_QUICK_RAFFLE;
			}// end data setter override
			
			protected function deleteRaffleHandler():void{
				if(deleteWarning == null){
					deleteWarning = PopUpManager.createPopUp(this, DeleteWarning, true) as DeleteWarning;
				}else{
					PopUpManager.addPopUp(deleteWarning, this, true);
				}
				deleteWarning.targetDescription = "this raffle";
				deleteWarning.addEventListener(DeleteWarning.CANCELLED, deleteCancelHandler);
				deleteWarning.addEventListener(DeleteWarning.CONFIRMED, deleteConfirmHandler);
				PopUpManager.centerPopUp(deleteWarning);
			}// end deleteRaffleHandler function
			
			private function deleteCancelHandler(event:Event):void{
				removeDeleteWarningHandlers();
			}// end deleteCancelHandler function
			
			private function deleteConfirmHandler(event:Event):void{
				removeDeleteWarningHandlers();
				this.dispatchEvent( new RaffleEvent(RaffleEvent.DELETE, raffle) );
			}// end deleteConfirmHandler function
			
			private function removeDeleteWarningHandlers():void{
				if(deleteWarning){
					deleteWarning.removeEventListener(DeleteWarning.CANCELLED, deleteCancelHandler);
					deleteWarning.removeEventListener(DeleteWarning.CONFIRMED, deleteConfirmHandler);
				}
			}// end removeDeleteWarningHandlers function
			
		]]>
	</fx:Script>
	
	<!-- action bar -->
	<s:actionContent>
		<s:Button id="deleteBtn" icon="@Embed('/assets/icons/raffle-delete.png')" click="deleteRaffleHandler()" />
	</s:actionContent>
	
	<!-- raffle overview -->
	<!-- TODO : Add scroller in case of really stupid long prize, name, and top info -->
	<s:VGroup top="0" bottom="0" left="0" right="0"
			  verticalAlign="middle" horizontalAlign="center">
		<s:VGroup gap="50">
			<s:HGroup includeIn="meetingRaffle">
				<s:Label text="Prize :" width="{LABEL_WIDTH}" styleName="highlight" />
				<s:Label text="{raffle.prize}" maxWidth="600" />
			</s:HGroup>
			<s:HGroup includeIn="quickRaffle">
				<s:Label text="Raffle Type :" width="{LABEL_WIDTH}" styleName="highlight" />
				<s:Label text="Quick Raffle" />
			</s:HGroup>
			<s:HGroup>
				<s:Label text="Winner :" width="{LABEL_WIDTH}" styleName="highlight" />
				<s:Label text="{raffle.winner.fullName}" maxWidth="600" />
			</s:HGroup>
			<s:HGroup>
				<s:Label text="Date Raffled :" width="{LABEL_WIDTH}" styleName="highlight" />
				<s:Label text="{raffle.formattedDate}" />
			</s:HGroup>
			<s:HGroup includeIn="meetingRaffle">
				<s:Label text="Meeting :" width="{LABEL_WIDTH}" styleName="highlight" />
				<s:VGroup gap="25">
					<s:Label text="{meeting.formattedDate}" />
					<s:Label text="{meeting.topic}" maxWidth="600" />
					<!-- TODO : Add link to view meeting details -->
				</s:VGroup>
			</s:HGroup>
		</s:VGroup>
	</s:VGroup>
	
</s:View>
