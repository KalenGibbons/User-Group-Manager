<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		title="Members"
		currentState="normal"
		addedToStage="addedToStageHandler()"
		removedFromStage="removedFromStageHandler()">
	
	<s:states>
		<s:State name="normal" />
		<s:State name="noData" />
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import com.ortusSolutions.userGroupManager.events.ModelEvent;
			import com.ortusSolutions.userGroupManager.events.RequestCompleteEvent;
			import com.ortusSolutions.userGroupManager.model.Person;
			import com.ortusSolutions.userGroupManager.views.forms.PersonForm;
			
			import mx.collections.ArrayCollection;
			import mx.utils.StringUtil;
			
			import spark.events.TextOperationEvent;
			
			[Bindable]
			[Inject(id="people")]
			public var people:ArrayCollection;
			
			protected const DEFAULT_SEARCH_TEXT:String = 	"Search";
			protected const STATE_NO_DATA:String =			"noData";
			protected const STATE_NORMAL:String =			"normal";
			
			/* ***************************************************************************************
			**									PUBLIC HANDLERS
			*************************************************************************************** */
			
			[Init]
			public function injectionHandler():void{
				if(people != null && people.filterFunction == null){
					people.filterFunction = peopleFilter;
				}
				this.currentState = (people != null && people.source.length > 0) ? STATE_NORMAL : STATE_NO_DATA;
			}// end injectionHandler function
			
			/* ***************************************************************************************
			**									PRIVATE FUNCTIONS
			*************************************************************************************** */
			
			protected function addedToStageHandler():void{
				this.dispatchEvent( new Event("configureView", true) );
			}// end addedToStageHandler function
			
			protected function peopleFilter(item:Object):Boolean{
				var matched:Boolean = false;
				var searchTerm:String = iSearch.text.toLowerCase();
				var person:Person = item as Person;
				if(searchTerm == DEFAULT_SEARCH_TEXT.toLowerCase()
					|| person.fullName.toLowerCase().indexOf(searchTerm) >= 0
					|| person.email.toLowerCase().indexOf(searchTerm) >= 0){
					matched = true;
				}
				return matched;
			}// end peopleFilter function
			
			protected function removedFromStageHandler():void{
				// remove attachments
				people.filterFunction = null;
				people.refresh();
			}// end removedFromStageHandler function
			
			private function searchFocusInHandler(event:FocusEvent):void{
				if(iSearch.text == DEFAULT_SEARCH_TEXT){
					iSearch.text = "";
				}
			}// end searchFocusInHandler function
			
			private function searchFocusOutHandler(event:FocusEvent):void{
				if(StringUtil.trim(iSearch.text).length == 0){
					iSearch.text = DEFAULT_SEARCH_TEXT;
				}
			}// end searchFocusOutHandler function

			protected function searchHandler(event:TextOperationEvent):void{
				var searchTerm:String = event.target.text;
				if(searchTerm != DEFAULT_SEARCH_TEXT){
					people.refresh();
				}
			}// end searchHandler function

		]]>
	</fx:Script>
	
	<!-- member search -->
	<s:titleContent>
		<s:HGroup top="0" bottom="0" left="0" right="0"
				  verticalAlign="middle"
				  gap="20" paddingLeft="25">
			<s:Label id="titleDisplay" text="{this.title}" />
			<s:Group>
				<s:TextInput id="iSearch" text="{DEFAULT_SEARCH_TEXT}"
							 color="{iSearch.text == DEFAULT_SEARCH_TEXT ? 0xAAAAAA : 0xFFFFFF}"
							 focusIn="searchFocusInHandler(event)"
							 focusOut="searchFocusOutHandler(event)" 
							 change="searchHandler(event)" />
				<s:Image source="@Embed('/assets/icons/search-bw.png')" right="0" top="2" alpha=".6" />
				
			</s:Group>
		</s:HGroup>
	</s:titleContent>
	
	<!-- add member -->
	<s:actionContent>
		<s:Button icon="@Embed('/assets/icons/user-add.png')" click="navigator.pushView(PersonForm)" />
	</s:actionContent>

</s:View>
