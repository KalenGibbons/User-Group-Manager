<?xml version="1.0" encoding="utf-8"?>
<base:BasePersonList xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark"
					 xmlns:base="com.ortusSolutions.userGroupManager.views.base.*">
	
	<fx:Declarations>
		<s:Button id="addMemberBtn" label="Add Member" click="navigator.pushView(PersonForm)" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.ortusSolutions.userGroupManager.model.Meeting;
			import com.ortusSolutions.userGroupManager.model.Person;
			import com.ortusSolutions.userGroupManager.vo.Attendee;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			[Bindable]
			protected var attendees:ArrayCollection;
			protected var meeting:Meeting;
			
			/* ***************************************************************************************
			**									PUBLIC FUNCTIONS
			*************************************************************************************** */
			
			[Init]
			override public function iocInitializedHandler():void{
				if(people && meeting){
					attendees = new ArrayCollection();
					for each(var person:Person in people.source){
						var index:int = meeting.attendees.source.indexOf(person);
						var inAttendance:Boolean = (index > -1);
						attendees.addItem( new Attendee(person, inAttendance) );
					}
					attendees.refresh();
				}
				if(attendees && attendees.filterFunction == null){
					attendees.filterFunction = attendeeFilter;
				}
				//super.iocInitializedHandler();
			}// end iocInitializedHandler function
			
			override public function set data(value:Object):void{
				this.meeting = value as Meeting;
				super.data = meeting;
			}//end data setter function
			
			override public function get actionContent():Array{
				return [addMemberBtn];
			}// end actionContent getter override
			
			/* ***************************************************************************************
			**									PRIVATE FUNCTIONS
			*************************************************************************************** */
			
			protected function attendeeFilter(item:Object):Boolean{
				var matched:Boolean = false;
				var searchTerm:String = iSearch.text.toLowerCase();
				var person:Person = (item as Attendee).person;
				if(searchTerm == DEFAULT_SEARCH_TEXT.toLowerCase()
					|| person.fullName.toLowerCase().indexOf(searchTerm) >= 0
					|| person.email.toLowerCase().indexOf(searchTerm) >= 0){
					matched = true;
				}
				return matched;
			}// end attendeeFilter function
			
			protected function completionHandler():void{
				// save the updated data
				meeting.attendees.source = [];
				for each(var attendee:Attendee in attendees.source){
					if(attendee.isAttending){
						meeting.attendees.addItem(attendee.person);
					}
				}
				navigator.popView();
			}// end completionHandler function
			
			override protected function removedFromStageHandler():void{
				// remove attachments
				attendees.filterFunction = null;
				attendees.refresh();
			}// end removedFromStageHandler function
			
			override protected function searchHandler(event:TextOperationEvent):void{
				var searchTerm:String = event.target.text;
				if(searchTerm != DEFAULT_SEARCH_TEXT){
					attendees.refresh();
				}
			}// end searchHandler function
			
		]]>
	</fx:Script>
	
	<!-- member list -->
	<s:List dataProvider="{attendees}"
			left="0" right="0" top="0" bottom="75"
			itemRenderer="com.ortusSolutions.userGroupManager.views.itemRenderers.PersonSelectionRenderer" />
	
	<!-- TODO : Move this -->
	<s:HGroup bottom="0" left="0" right="0" gap="0">
		<s:Button label="canel" width="100%" bottom="0" click="navigator.popView()" />	
		<s:Button label="done" width="100%" bottom="0" click="completionHandler()" />
	</s:HGroup>
</base:BasePersonList>
